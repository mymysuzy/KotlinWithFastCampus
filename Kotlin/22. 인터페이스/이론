객체지향 프로그래밍
    - 클래스, 상속, 인터페이스

인터페이스(interface)
    - 구현부가 없다
    - 따라서 생성자가 필요 없다
    - 규약/프로토콜 이다.
        * 인터페이스에 비어있는 것을 구현해주면 해당 인터페이스로 봐주겠다.
        * 비어있는 것 -> 추상(abstract)

    - 장점
        * 협업에 용이 -> 그다지 많이 활용하는 장점은 아니다
        * 확장 -> 다중 구현이 가능하지만 비추천하는 방식
